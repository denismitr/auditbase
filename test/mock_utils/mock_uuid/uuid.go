// Code generated by MockGen. DO NOT EDIT.
// Source: utils/uuid/uuid.go

// Package mock_uuid is a generated GoMock package.
package mock_uuid

import (
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockUUID4Generator is a mock of UUID4Generator interface
type MockUUID4Generator struct {
	ctrl     *gomock.Controller
	recorder *MockUUID4GeneratorMockRecorder
}

// MockUUID4GeneratorMockRecorder is the mock recorder for MockUUID4Generator
type MockUUID4GeneratorMockRecorder struct {
	mock *MockUUID4Generator
}

// NewMockUUID4Generator creates a new mock instance
func NewMockUUID4Generator(ctrl *gomock.Controller) *MockUUID4Generator {
	mock := &MockUUID4Generator{ctrl: ctrl}
	mock.recorder = &MockUUID4GeneratorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockUUID4Generator) EXPECT() *MockUUID4GeneratorMockRecorder {
	return m.recorder
}

// Generate mocks base method
func (m *MockUUID4Generator) Generate() string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Generate")
	ret0, _ := ret[0].(string)
	return ret0
}

// Generate indicates an expected call of Generate
func (mr *MockUUID4GeneratorMockRecorder) Generate() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Generate", reflect.TypeOf((*MockUUID4Generator)(nil).Generate))
}
